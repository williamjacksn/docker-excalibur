name: Build the container image

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  release:
    types:
      - published

env:
  ghcr_image_name: ghcr.io/williamjacksn/excalibur
  docker_hub_image_name: williamjackson/excalibur

jobs:
  build:
    name: Build the container image
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Build the container image
        uses: docker/build-push-action@v3.1.0
        with:
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          cache-from: |
            ${{ env.ghcr_image_name }}
          load: true
          tags: |
            ${{ env.ghcr_image_name }}
            ${{ env.docker_hub_image_name }}

      - name: Log in to GitHub container registry
        if: github.event_name == 'push' || github.event_name == 'release'
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          password: ${{ github.token }}
          username: ${{ github.actor }}

      - name: Log in to Docker Hub
        if: github.event_name == 'push' || github.event_name == 'release'
        uses: docker/login-action@v2.0.0
        with:
          password: ${{ secrets.docker_hub_password }}
          username: ${{ secrets.docker_hub_username }}

      - name: Push latest image to registries
        if: github.event_name == 'push'
        run: |
          docker image push ${{ env.ghcr_image_name }}
          docker image push ${{ env.docker_hub_image_name }}

      - name: Tag and push release image to registries
        if: github.event_name == 'release'
        run: |
          docker image tag ${{ env.ghcr_image_name }}:latest ${{ env.ghcr_image_name }}:${{ github.event.release.tag_name }}
          docker image push ${{ env.ghcr_image_name }}:${{ github.event.release.tag_name }}
          docker image tag ${{ env.docker_hub_image_name }}:latest ${{ env.docker_hub_image_name }}:${{ github.event.release.tag_name }}
          docker image push ${{ env.docker_hub_image_name }}:${{ github.event.release.tag_name }}
